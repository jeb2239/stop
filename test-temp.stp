/*
 * test-nested1.stp
 * ================
 */


class Rectangle = {
    var a:Int;
    var b:Int;
    var c:Int;
}

def print_rectangle = (a:Rectangle):Rectangle {
    printf("%d\n",a.a);
    //printf("%d\n",a.a );
return a;
}

def main = ():Int {

    var j:Rectangle;
    j.a=0;
    printf("%d\n",j);

    print_rectangle(j);
    printf("%d\n",j.a); //works up to here

    print_rectangle(j); //now we seg
    var a:Rectangle = print_rectangle(j);
    print_rectangle(a);

}





/*
class Test = {
	var a:Int[];
	def call_me = ():Int{
		var g:Int = 0;
		this.a;

		return 0;
	}

}

def main = ():Int {
	var a:Int;
	a = 7;
	var b:Test;

	b.a = Int[30]();
	b.a[0]=4;
	var i:Int;
	for(i=0;i<a;i=i+1){
	printf("%d\n",b.a[i]);
	}
	printf("%d\n",33);
=======
class Example = {
	var b : Int;
}

def f = (a:Example):Int {
	return a.b;
}

def main = ():Int {
	var c:Example;
	c.b = 5;
	var i:Int = f(c);
	printf("%d\n", i);
>>>>>>> compiler_updates_everyone
	return 0;
}
*/
